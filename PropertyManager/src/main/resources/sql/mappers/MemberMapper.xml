<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tmoncorp.PropertyManager.repository.MemberMapper">
	<resultMap type="MemberModel" id="MembertResult">
		<result property="memberId" column="member_id" />
		<result property="memberName" column="member_name" />
		<result property="upperDivision" column="upper_division" />
		<result property="lowerDivision" column="lower_division" />
		<result property="adAccount" column="ad_account" />
		<result property="officePhoneNumber" column="office_phone_number" />
		<result property="isServed" column="is_served" />
	</resultMap>

	<insert id="insertMemberInfomation" parameterType="MemberModel">
		INSERT INTO
			member(member_id, member_name, upper_division, lower_division, ad_account, office_phone_number, is_served)
		SELECT
			#{memberId}, #{memberName}, #{upperDivisionCode}, #{lowerDivisionCode}, #{adAccount}, #{officePhoneNumber}, 'Y' 
		FROM DUAL WHERE NOT EXISTS
			(SELECT M.member_id FROM member M WHERE M.member_id = #{memberId})
	</insert>
	
	<select id="selectMembers" resultMap="MembertResult">
		SELECT
			M.member_id, M.member_name, C1.category_name AS upper_division, C2.category_name AS lower_division, M.ad_account, M.office_phone_number
		FROM
			member M
		JOIN
			category C1
				ON
					(C1.category_code = M.upper_division)
		JOIN
			category C2
				ON
					(C2.category_code = M.lower_division)
		WHERE
			is_served = 'Y'
			<if test="upperCategory != ''">
				AND C1.category_name = #{upperCategory}
			</if>
			<if test="lowerCategory != ''">
				AND C2.category_name = #{lowerCategory}
			</if>
			<if test="adAccount != ''">
				AND M.ad_account like #{adAccount}
			</if>
			<if test="nameOfMember != ''">
				AND M.member_name like #{nameOfMember}
			</if>
		ORDER BY
			member_id DESC	
		LIMIT
			#{page}, #{viewSolePage}
	</select>
	
	<select id="selectUpperDivisions" resultType="String">
		SELECT
			upper_division
		FROM
			member
		GROUP BY
			upper_division
	</select>
	
	<select id="selectLowerDivisions" resultType="String">
		SELECT
				lower_division
			FROM
				member
			WHERE
				upper_division = #{upperDivision}
			GROUP BY
				lower_division
	</select>
	
	<select id="selectAMember" resultMap="MembertResult">
		SELECT
			M.member_id, M.member_name, C1.category_name AS upper_division, C2.category_name AS lower_division, M.ad_account, M.office_phone_number
		FROM
			member M
		JOIN
			category C1
				ON
					(C1.category_code = M.upper_division)
		JOIN
			category C2
				ON
					(C2.category_code = M.lower_division)
		WHERE
			member_id = #{memberId}  
	</select>
	
	<update id="modifyMember" parameterType="memberModel">
		UPDATE
			member
		SET
			member_name = #{memberName}, upper_division = #{upperDivision}, lower_division = #{lowerDivision}, ad_account = #{adAccount}, office_phone_number = #{officePhoneNumber}
		WHERE
			member_id = #{memberId}
	</update>
	
	<update id="retireMember" parameterType="String">
		UPDATE
			member
		SET
			is_served = 'N', retire_date=NOW()
		WHERE
			member_id = #{memberId}
	</update>
	
	<select id="selectRetiredMembers" resultMap="MembertResult">
		SELECT
			M.member_id, M.member_name, C1.category_name AS upper_division, C2.category_name AS lower_division, M.ad_account, M.office_phone_number
		FROM
			member M
		JOIN
			category C1
				ON
					(C1.category_code = M.upper_division)
		JOIN
			category C2
				ON
					(C2.category_code = M.lower_division)
		WHERE
			is_served = 'N'
				<if test="upperCategory != ''">
					AND C1.category_name = #{upperCategory}
				</if>
				<if test="lowerCategory != ''">
					AND C2.category_name = #{lowerCategory}
				</if>
				<if test="adAccount != ''">
					AND M.ad_account like #{adAccount}
				</if>
				<if test="nameOfMember != ''">
					AND M.member_name like #{nameOfMember}
				</if>
		ORDER BY
			member_id DESC
		LIMIT
			#{page}, #{viewSolePage}
			
	</select>
	
	<select id="selectMaximumRow" resultType="Integer">
		SELECT 
			COUNT(member_id)
		FROM
			member M
		JOIN
			category C1
				ON
					(C1.category_code = M.upper_division)
		JOIN
			category C2
				ON
					(C2.category_code = M.lower_division)
		WHERE
			is_served = 'Y'
			<if test="upperCategory != ''">
				AND C1.category_name = #{upperCategory}
			</if>
			<if test="lowerCategory != ''">
				AND C2.category_name = #{lowerCategory}
			</if>
			<if test="adAccount != ''">
				AND M.ad_account like #{adAccount}
			</if>
			<if test="nameOfMember != ''">
				AND M.member_name like #{nameOfMember}
			</if>
	</select>
	
	<select id="selectMaximumRowRetired" resultType="Integer">
		SELECT 
			COUNT(member_id)
		FROM
			member M
		JOIN
			category C1
				ON
					(C1.category_code = M.upper_division)
		JOIN
			category C2
				ON
					(C2.category_code = M.lower_division)
		WHERE
			is_served = 'N'
			<if test="upperCategory != ''">
				AND C1.category_name = #{upperCategory}
			</if>
			<if test="lowerCategory != ''">
				AND C2.category_name = #{lowerCategory}
			</if>
			<if test="adAccount != ''">
				AND M.ad_account like #{adAccount}
			</if>
			<if test="nameOfMember != ''">
				AND M.member_name like #{nameOfMember}
			</if>
	</select>
	
</mapper>